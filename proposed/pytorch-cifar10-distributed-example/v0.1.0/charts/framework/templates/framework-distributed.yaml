apiVersion: frameworkcontroller.microsoft.com/v1
kind: Framework
metadata:
  name: pytorchringallreduce
  namespace: {{ .Release.Namespace }}
spec:
  executionType: Start
  retryPolicy:
    fancyRetryPolicy: true
    maxRetryCount: 2
  taskRoles:
    - name: worker
      taskNumber: {{ .Values.worker.replicas }}
      frameworkAttemptCompletionPolicy:
        minFailedTaskCount: 1
        minSucceededTaskCount: -1
      task:
        retryPolicy:
          fancyRetryPolicy: false
          maxRetryCount: 0
        pod:
          spec:
            restartPolicy: Never
            hostNetwork: false
            containers:
              - name: worker
                image: "{{ .Values.image.job.name }}:{{ .Values.image.job.tag }}"
                command: [
                  "sh", "-c",
                  "FB_PS_PORT=23456 . /mnt/frameworkbarrier/injector.sh &&
                  python /code/main.py --backend {{ .Values.global.training.backend }} --init-method tcp://${FB_PS_ADDRESSES}:23456 --world-size {{ .Values.global.training.worldsize }} --rank ${VK_TASK_INDEX} --arch {{ .Values.global.training.arch }} --epochs {{ .Values.global.training.epochs }} --batch-size {{ .Values.global.training.batchsize }} --learning-rate {{ .Values.global.training.learningrate }}"]
                securityContext:
                  capabilities:
                    add: [ "IPC_LOCK" ]
                ports:
                  - containerPort: 23456
                resources:
                limits:
                    {{- if eq .Values.global.gpu.enabled true -}}
                    {{ .Values.global.gpu.name }}: {{ .Values.global.gpu.num }}
                    {{- end -}}
                    {{- if eq .Values.global.rdma.enabled true -}}
                    {{ .Values.global.rdma.name }}: 1
                    {{- end -}}
                volumeMounts:
                  - name: frameworkbarrier-volume
                    mountPath: /mnt/frameworkbarrier
            serviceAccountName: frameworkbarrier
            initContainers:
              - name: frameworkbarrier
                image: "{{ .Values.image.frameworkbarrier.name }}:{{ .Values.image.frameworkbarrier.tag }}"
                volumeMounts:
                  - name: frameworkbarrier-volume
                    mountPath: /mnt/frameworkbarrier
            volumes:
              - name: frameworkbarrier-volume
                emptyDir: {}